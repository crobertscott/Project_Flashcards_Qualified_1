{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crobe\\\\Thinkful\\\\Qualified\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CardAdd.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { createCard } from \"../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCards({\n  deck,\n  setCards\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  console.log(\"deckId = \", deckId);\n  console.log(\"number of deck = \", deckId);\n\n  async function handleSave() {\n    const front = document.getElementById(\"cardFront\").value;\n    const back = document.getElementById(\"cardBack\").value;\n    const card = {\n      front: front,\n      back: back,\n      deckId: Number(deckId)\n    };\n    const respNewCard = await createCard(deckId, card);\n    setCards(respNewCard);\n    history.push(`/decks/${deckId}`);\n  }\n\n  if (deck && Object.keys(deck).length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: `${deck.name}: Add Card`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardFront\",\n              children: \"Front\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"cardFront\",\n              rows: \"3\",\n              placeholder: \"Front side of card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardBack\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"cardBack\",\n              rows: \"3\",\n              placeholder: \"Back side of card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            type: \"button\",\n            value: \"Reset\",\n            onClick: () => history.push(`/decks/${deckId}`),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"button\",\n            value: \"Submit\",\n            onClick: e => {\n              e.preventDefault();\n              handleSave();\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, deck.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, \"addCard\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(AddCards, \"awNFsR2ftzSh4EE9teUdHxAvYoI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCards;\nexport default AddCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCards\");","map":{"version":3,"sources":["C:/Users/crobe/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/CardAdd.js"],"names":["React","useHistory","useParams","createCard","AddCards","deck","setCards","history","deckId","console","log","handleSave","front","document","getElementById","value","back","card","Number","respNewCard","push","Object","keys","length","name","e","preventDefault","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { createCard } from \"../utils/api/index.js\";\r\n\r\nfunction AddCards({ deck, setCards }) {\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n  console.log(\"deckId = \", deckId);\r\n  console.log(\"number of deck = \", deckId);\r\n\r\n  async function handleSave() {\r\n    const front = document.getElementById(\"cardFront\").value;\r\n    const back = document.getElementById(\"cardBack\").value;\r\n    const card = {\r\n      front: front,\r\n      back: back,\r\n      deckId: Number(deckId),\r\n    };\r\n    const respNewCard = await createCard(deckId, card);\r\n    setCards(respNewCard);\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n  if (deck && Object.keys(deck).length > 0) {\r\n    return (\r\n      <main>\r\n        <nav aria-label=\"breadcrumb\">\r\n          {\" \"}\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"breadcrumb-item\">\r\n              <p>{deck.name}</p>\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <section key=\"addCard\">\r\n          <h2 className=\"card-title\">{`${deck.name}: Add Card`}</h2>\r\n          <form key={deck.id} className=\"form-group\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"cardFront\">Front</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"cardFront\"\r\n                rows=\"3\"\r\n                placeholder={\"Front side of card\"}\r\n              ></textarea>\r\n              <label htmlFor=\"cardBack\">Back</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"cardBack\"\r\n                rows=\"3\"\r\n                placeholder={\"Back side of card\"}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              type=\"button\"\r\n              value=\"Reset\"\r\n              onClick={() => history.push(`/decks/${deckId}`)}\r\n            >\r\n              Done\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSave();\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </section>\r\n      </main>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\nexport default AddCards;"]},"metadata":{},"sourceType":"module"}