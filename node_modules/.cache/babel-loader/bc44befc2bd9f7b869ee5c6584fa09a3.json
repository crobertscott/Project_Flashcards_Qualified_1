{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crobe\\\\Thinkful\\\\Qualified\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CardEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../utils/api/index.js\";\nimport ErrorMessage from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  deck,\n  setDeck,\n  card,\n  setCard,\n  error,\n  setError\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const {\n    cardId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n    deckId && readDeck(deckId, abortController.signal).then(deck => {\n      return setDeck(deck);\n    }).catch(error => setError(error));\n    return () => abortController.abort();\n  }, [deckId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    cardId && readCard(cardId, abortController.signal).then(card => {\n      return setCard(card);\n    }).catch(error => setError(error));\n    return () => abortController.abort();\n  }, [cardId]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  async function handleSave() {\n    const front = document.getElementById(\"cardFront\").value;\n    const back = document.getElementById(\"cardBack\").value;\n    const editedCard = {\n      id: cardId,\n      front: front,\n      back: back,\n      deckId: deckId\n    };\n    updateCard(editedCard);\n    history.push(`/decks/${deckId}`);\n  }\n\n  if (card && Object.keys(card).length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/decks/${deck.id}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Edit Card \", cardId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: `${deck.name}: Edit Card`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardFront\",\n              children: \"Front\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"cardFront\",\n              rows: \"3\",\n              placeholder: `${card.front}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardBack\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"cardBack\",\n              rows: \"3\",\n              placeholder: `${card.back}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            type: \"button\",\n            value: \"Reset\",\n            onClick: () => history.push(`/decks/${deckId}`),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"button\",\n            value: \"Submit\",\n            onClick: e => {\n              e.preventDefault();\n              handleSave();\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, \"editCard\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(EditCard, \"JntlSAr7iBv5XphPLzXl0LXbRXI=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/crobe/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/CardEdit.js"],"names":["React","useEffect","useParams","useHistory","readDeck","readCard","updateCard","ErrorMessage","EditCard","deck","setDeck","card","setCard","error","setError","deckId","cardId","history","abortController","AbortController","signal","then","catch","abort","handleSave","front","document","getElementById","value","back","editedCard","id","push","Object","keys","length","name","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { readDeck, readCard, updateCard } from \"../utils/api/index.js\";\r\nimport ErrorMessage from \"./Error\";\r\n\r\nfunction EditCard({ deck, setDeck, card, setCard, error, setError }) {\r\n  const { deckId } = useParams();\r\n  const { cardId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    deckId &&\r\n      readDeck(deckId, abortController.signal)\r\n        .then((deck) => {\r\n          return setDeck(deck);\r\n        })\r\n        .catch((error) => setError(error));\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    cardId &&\r\n      readCard(cardId, abortController.signal)\r\n        .then((card) => {\r\n          return setCard(card);\r\n        })\r\n        .catch((error) => setError(error));\r\n\r\n    return () => abortController.abort();\r\n  }, [cardId]);\r\n\r\n  if (error) {\r\n    return <ErrorMessage error={error} />;\r\n  }\r\n  async function handleSave() {\r\n    const front = document.getElementById(\"cardFront\").value;\r\n    const back = document.getElementById(\"cardBack\").value;\r\n    const editedCard = {\r\n      id: cardId,\r\n      front: front,\r\n      back: back,\r\n      deckId: deckId,\r\n    };\r\n    updateCard(editedCard);\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n  if (card && Object.keys(card).length > 0) {\r\n    return (\r\n      <main>\r\n        <nav aria-label=\"breadcrumb\">\r\n          {\" \"}\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"breadcrumb-item\">\r\n              <a href={`/decks/${deck.id}`}>{deck.name}</a>\r\n            </li>\r\n            <li className=\"breadcrumb-item\">\r\n              <p>Edit Card {cardId}</p>\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <section key=\"editCard\">\r\n          <h2 className=\"card-title\">{`${deck.name}: Edit Card`}</h2>\r\n          <form key={card.id} className=\"form-group\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"cardFront\">Front</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"cardFront\"\r\n                rows=\"3\"\r\n                placeholder={`${card.front}`}\r\n              ></textarea>\r\n              <label htmlFor=\"cardBack\">Back</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"cardBack\"\r\n                rows=\"3\"\r\n                placeholder={`${card.back}`}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              type=\"button\"\r\n              value=\"Reset\"\r\n              onClick={() => history.push(`/decks/${deckId}`)}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSave();\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </section>\r\n      </main>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}